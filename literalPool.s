
.global main         // main ¿¿ ¿¿ ¿¿
.text                // ¿¿ ¿¿ (¿¿ ¿¿¿ ¿¿¿¿ ¿¿)
.align 2             // ¿¿¿¿ 2¿ ¿¿¿ ¿¿ (¿¿¿ ¿¿ ¿¿¿)

main:   
    str x30, [sp, -16]!    // ¿¿¿ ¿¿ ¿¿¿¿(x30)¿ ¿¿
                           // ¿¿ ¿¿¿(sp)¿¿ 16¿¿¿ ¿¿¿ ¿¿¿¿, ¿¿ ¿¿¿¿(x30)¿ ¿ ¿¿¿ ¿¿
                           
    ldr x0, =fmt           // fmt ¿¿¿¿ ¿¿¿ x0 ¿¿¿¿¿ ¿¿
    ldr x1, =q             // q¿ ¿¿¿ x1 ¿¿¿¿¿ ¿¿
    ldr x2, [x1]           // q¿ ¿¿¿¿ ¿¿¿ ¿¿¿¿ ¿¿ ¿¿¿ x2¿ ¿¿ (q¿ ¿¿¿ ¿¿ 0x1122334455667788)
    bl printf              // printf ¿¿ ¿¿, x0 = fmt ¿¿¿¿ ¿¿, x2 = q¿ ¿ (0x1122334455667788)

    ldr x0, =fmt           // fmt ¿¿¿¿ ¿¿¿ ¿¿ x0¿ ¿¿
    ldr x1, q              // q ¿¿¿¿ ¿¿¿¿ ¿¿ x1¿ ¿¿ ¿¿ (¿¿¿ q¿ ¿¿ ¿¿¿, ¿ 0x1122334455667788¿ x1¿ ¿¿¿)
    ldr x2, [x1]           // x1¿ ¿¿¿ ¿¿ ¿¿¿ ¿¿¿ ¿¿¿ ¿¿ ¿¿¿¿ ¿¿ (¿¿¿ ¿¿¿¿ ¿¿)
                           // ¿¿¿ x1¿ ¿¿¿ ¿¿¿ ¿¿ ¿(0x1122334455667788)¿ ¿¿¿ ¿¿ ¿¿¿, ¿¿¿ ¿¿¿¿ ¿¿¿ ¿¿
    
    bl printf              // printf ¿¿ ¿¿, ¿ ¿¿¿¿ ¿¿¿ ¿¿¿¿ ¿¿¿¿¿ ¿¿ ¿¿¿ ¿ ¿¿

    ldr x30, [sp], 16      // ¿¿¿ ¿¿¿ ¿ ¿¿ ¿¿¿¿(x30)¿ ¿¿¿¿, ¿¿ ¿¿¿¿ ¿¿ 16¿¿¿ ¿¿
    mov w0, wzr            // w0¿ 0¿ ¿¿ (wzr¿ ¿¿ 0¿ ¿¿¿¿ ¿¿¿¿)
    ret                    // ¿¿ ¿¿, ¿¿ ¿¿¿¿(x30)¿ ¿¿¿ ¿¿¿ ¿¿

.data                      // ¿¿¿ ¿¿ (¿¿ ¿¿¿ ¿¿)
q:      .quad   0x1122334455667788   // 64¿¿ ¿¿ ¿(0x1122334455667788)¿ q¿ ¿¿
fmt:    .asciz  "address: %p value: %lx\n"  // null-terminated C ¿¿¿ ¿¿¿ ¿¿

.end                       // ¿¿ ¿¿

